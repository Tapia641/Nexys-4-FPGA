
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity practica1 is
    Port ( a,b : in  STD_LOGIC_VECTOR (3 downto 0);
           cin : in  STD_LOGIC;
           cout : out  STD_LOGIC;
           s : out  STD_LOGIC_VECTOR (3 downto 0));
end practica1;

architecture Behavioral of practica1 is

signal c : STD_LOGIC_VECTOR (4 downto 0);
signal eb: STD_LOGIC_VECTOR (3 downto 0);

begin

c(0) <= cin;
--	ciclo : for i in 0 to 3 generate
--		eb(i) <= b(i) xor cin;
--		s(i) <= a(i) xor eb(i) xor c(i);
--		c(i+1) <= (a(i) and eb(i)) or (a(i) and c(i)) or (eb(i) and c(i));
--	
--	end generate;

	process(a, b,cin)
		variable p, g: std_logic_vector(3 downto 0);
	begin
		for i in 0 to 3 loop
			P(i) := a(i) xor b(i);
			g(i) := a(i) and b(i);
			s(i) := P(i) xor c(i);
			
			algo <= c(0);
			for j in 0 to i loop
				algo <= P(j) and algo;
			end loop;
			
			
			
			
			C(i+1) <= G(i) or  algo or algo2;
		
		end loop;
	
	end process;

	cout <= c(4);
end Behavioral;

